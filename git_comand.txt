---------------------------------------------------------
参数说明
--system 系统
--global 用户
---------------------------------------------------------
初始化配置
用户信息
$ git config --global user.name "shfypp"
$ git config --global user.email "yuanchaogao@gmail.com"
---------------------------------------------------------
文件、文件夹操作
$ mkdir git			//当前目录下创建文件夹：git
$ pwd				//显示当前路径
$ dir				//文件列表
$ ls				//同上
$ clear				//清屏
---------------------------------------------------------
一些用到的操作
Shift+:wq 回车		//退出shell编辑器
---------------------------------------------------------
常用命令
$ git config --global --list	查看配置信息
$ git config user.name		git config <key>：某一项配置
---------------------------------------------------------
查看状态
$ git status	//查看当前状态
$ git status -s	//查看当前状态 状态概览
A 新添加到暂存区中的文件
D 删除的文件
---------------------------------------------------------
查看改变
$ git diff git_comand.txt		//查看工作空间和暂存空间的区别
$ git diff --cached git_comand.txt 	//查看暂存区和仓库区的区别
---------------------------------------------------------
提交
$ git commit -m "message"		//提交暂存区内容
$ git commit -a -m "跳过暂存直接提交"
---------------------------------------------------------
删除
$ git rm git_comand.txt 		//删除版本控制并删除文件
$ git rm -f git_comand.txt 		//删除版本控制并删除文件 工作区文件有变化需要加-f强制删除
$ git rm --cached test_ignore.log	//删除版本控制 保留文件 文件处于未跟踪文件清单中
---------------------------------------------------------
移动 重命名文件
$ git mv test_ignore.log test_ignore	//重命名文件
---------------------------------------------------------
查看提交历史
$ git log --pretty=oneline		//查看提条历史
$ git log -p --pretty=oneline	//查看提交历史 并查看历次提交的差异
$ git log -p -2 --pretty=oneline	//查看最近2次提交历史 并查看提交的差异
$ git log --stat --pretty=oneline	//查看提交历史 并查看提交的差异 简略统计信息
$ git log --stat --pretty=oneline --graph	//查看提交历史 并查看提交的差异 简略统计信息 美化显示
---------------------------------------------------------
撤销操作
--修改本次提交
$ git commit --amend	//暂存区从上次提交后没有变化,只修改提交信息;暂存区有变化则合并提交到上次的提交中
--暂存区内容退回到工作区
$ git reset HEAD git_comand.txt		
--撤销工作区内容的修改
$ git checkout git_comand.txt

